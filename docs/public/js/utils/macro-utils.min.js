/* Macro Utils, By BlackStar, Partially adapted from ChapelR, Ver.0.4.0 */
(()=>{const isValidVariable=varName=>varName&&typeof varName==="string"&&varName.length>=2&&(varName[0]==="$"||varName[0]==="_");const repeat=(times,action)=>{for(let i=0;i<times;i++){action(i)}};const incVar=(v,inc=1)=>State.setVar(v,(State.getVar(v)??0)+inc);const WikiVars=(pairs,entity)=>{const shadowStore={};for(const[varName,value]of Object.entries(pairs)){if(Object.hasOwn(State.temporary,varName)){shadowStore[`_${varName}`]=State.temporary[varName]}State.temporary[varName]=value;entity.addShadow(`_${varName}`);if(Object.hasOwn(State.variables,varName)){shadowStore[`$${varName}`]=State.variables[varName]}State.variables[varName]=State.temporary[varName];entity.addShadow(`$${varName}`)}try{new Wikifier(entity.output,entity?.payload?.[0]?.contents||"")}finally{for(const[varName]of Object.entries(pairs)){if(Object.hasOwn(shadowStore,`_${varName}`)){State.temporary[varName]=shadowStore[`_${varName}`]}else{delete State.temporary[varName]}if(Object.hasOwn(shadowStore,`$${varName}`)){State.variables[varName]=shadowStore[`$${varName}`]}else{delete State.variables[varName]}}}};const applyBounds=(value,min,max)=>{if(min===undefined&&max===undefined){return value}if(max===undefined){return Math.max(min,value)}if(min===undefined){return Math.min(max,value)}return Math.max(min,Math.min(max,value))};const convertToArray=input=>{const array=[];for(const[key,value]of Object.entries(input)){array.push(key,value)}return array};const convertToObject=arr=>{if(!Array.isArray(arr)||arr.length===0){return{}}const flatten=array=>array.reduce(((flatArr,item)=>flatArr.concat(Array.isArray(item)?flatten(item):item)),[]);const flattened=flatten(arr);const obj={};for(let i=0;i<flattened.length;i+=2){const key=flattened[i];if(typeof key==="string"){obj[key]=flattened[i+1]}}return obj};const sortBy=(arr,field,order="asc")=>{const lowerCaseOrder=order.toLowerCase();if(lowerCaseOrder!=="asc"&&lowerCaseOrder!=="desc"){throw new Error(`Invalid order: ${order}. Use 'asc' or 'desc'.`)}return arr.sort(((a,b)=>{if(!(field in a)||!(field in b)){throw new Error(`Field '${field}' does not exist in one of the objects.`)}const fieldA=a[field];const fieldB=b[field];if(Array.isArray(fieldA)&&Array.isArray(fieldB)){return lowerCaseOrder==="asc"?fieldA.length-fieldB.length:fieldB.length-fieldA.length}if(typeof fieldA==="object"&&typeof fieldB==="object"){if(fieldA instanceof Date&&fieldB instanceof Date){return lowerCaseOrder==="asc"?fieldA.getTime()-fieldB.getTime():fieldB.getTime()-fieldA.getTime()}else if(fieldA instanceof Map&&fieldB instanceof Map){return lowerCaseOrder==="asc"?fieldA.size-fieldB.size:fieldB.size-fieldA.size}return 0}if(typeof fieldA==="string"&&typeof fieldB==="string"){return lowerCaseOrder==="asc"?fieldA.localeCompare(fieldB):fieldB.localeCompare(fieldA)}if(typeof fieldA==="number"&&typeof fieldB==="number"){return lowerCaseOrder==="asc"?fieldA-fieldB:fieldB-fieldA}return 0}))};setup.sortBy=sortBy;window.sortBy=window.sortBy||sortBy;setup.convertToObject=convertToObject;window.convertToObject=window.convertToObject||convertToObject;setup.convertToArray=convertToArray;window.convertToArray=window.convertToArray||convertToArray;setup.applyBounds=applyBounds;window.applyBounds=window.applyBounds||applyBounds;setup.repeat=repeat;window.repeat=window.repeat||repeat;setup.isValidVariable=isValidVariable;window.isValidVariable=window.isValidVariable||isValidVariable;setup.WikiVars=WikiVars;window.WikiVars=window.WikiVars||WikiVars;setup.incVar=incVar;window.incVar=window.incVar||incVar})();
/* End Macro Utils */